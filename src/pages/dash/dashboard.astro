---
import LayoutSidebar from '../../components/dash/LayoutSidebar.astro';
import { sql } from '../../lib/neon';

// Fetch users from Neon database
async function fetchUsers() {
  try {
    const users = await sql`
      SELECT id, firstname, lastname, email, phone, batch, department
      FROM register
    `;
    return users;
  } catch (error) {
    console.error("Error fetching users from Neon:", error);
    return [];
  }
}

const users = await fetchUsers();
---

<LayoutSidebar>
  <div class="table-container">
    <table class="modern-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Email</th>
          <th>Phone</th>
          <th>Batch</th>
          <th>Department</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="userTableBody">
        {users.map((user) => (
          <tr id={`user-${user.id}`}>
            <td>{user.id}</td>
            <td>{user.firstname}</td>
            <td>{user.lastname}</td>
            <td>{user.email}</td>
            <td>{user.phone}</td>
            <td>{user.batch}</td>
            <td>{user.department}</td>
            <td>
              <button 
                class="delete-btn" 
                data-id={user.id}
              >
                Delete
              </button>
            </td>   
          </tr>
        ))}
      </tbody>
    </table>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const deleteButtons = document.querySelectorAll('.delete-btn');
      deleteButtons.forEach(button => {
        button.addEventListener('click', (event) => {
          const target = event.target;
          if (target) {
            const userId = (target as HTMLElement).getAttribute('data-id');
            handleDelete(userId);
          }
        });
      });
    });

    async function handleDelete(id:any) {
      if (confirm('Are you sure you want to delete this record?')) {
        const success = await deleteUser(id);
        if (success) {
          alert('User deleted successfully!');
          const userRow = document.getElementById(`user-${id}`);
          if (userRow) {
            userRow.remove();  
          }
        } else {
          alert('Failed to delete user.');
        }
      }
    }

    async function deleteUser(id:any) {
      try {
        const response = await fetch('/api/delete-user', {
          method: 'DELETE',
          body: JSON.stringify({ id }),
          headers: { 'Content-Type': 'application/json' }
          
        });
        if (response.ok) {
          console.log(`User with ID ${id} deleted successfully`);
          return true;
        }
        console.error(`Error deleting user with ID ${id}`);
        return false;
      } catch (error) {
        console.error(`Error deleting user with ID ${id}:`, error);
        return false;
      }
    }
  </script>
</LayoutSidebar>

<style>
  .table-container {
    overflow-x: auto;
    margin: 20px 0;
  }

  .modern-table {
    width: 100%;
    border-collapse: collapse;
    font-family: Arial, sans-serif;
    background-color: #1a1a2e;
    color: #f5f5f5;
    border: 1px solid #444;
  }

  .modern-table th, .modern-table td {
    padding: 10px 15px;
    text-align: left;
    border-bottom: 1px solid #444;
  }

  .modern-table thead {
    background-color: #162447;
  }

  .modern-table th {
    font-size: 16px;
    font-weight: bold;
  }

  .modern-table tbody tr {
    transition: background-color 0.3s ease;
  }

  .modern-table tbody tr:nth-child(even) {
    background-color: #1f4068;
  }

  .modern-table tbody tr:hover {
    background-color: #e43f5a;
    color: white;
  }

  .delete-btn {
    background-color: #e43f5a;
    color: white;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 3px;
    transition: background-color 0.3s ease;
  }

  .delete-btn:hover {
    background-color: #c7303e;
  }
</style>
